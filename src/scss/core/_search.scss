.search {
  
  $padding: 10px;
  $height: 60px;
  $breakpoint: min-width 765px;
  
  padding: $padding;
  display: flex;
  flex-wrap: wrap;
  background-color: color('white', 'off');
  margin-bottom: 25px;
  
  @include breakpoint( screen('large') ) {
    height: $height;
    flex-wrap: nowrap;
  };
  
  #{$all-verbage-inputs}, 
  .buttons,
  #{$all-buttons} { 
    height: $height - ($padding * 2); 
  }
  
  .search-box {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    background-color: white;
    border: 1px solid color('semantic');
    border-radius: 3px;
    min-height: $height - ($padding * 2);
    
    .entries {
      list-style-type: none;
      margin: 0;
      padding: 0;
      display: flex;
      flex-wrap: wrap;
      float: left;
      align-self: stretch;
      width: 100%;
      
      @mixin entry-color( $color ) {
        background-color: tint($color, 90%);
        color: shade($color, 65%);
        border: 1px solid $color;
        &::before { color: $color; }
      }
      
      li { 
        display: inline-flex; 
        align-items: center; 
        vertical-align: top;
      }
      
      .entry {
        margin: 5px 5px 0;
        padding: 5px 10px;
        border-radius: 3px;
        height: $height - ($padding * 2) - (5px * 2);
        @include entry-color( color('semantic', 'primary') );
        
        #{$all-buttons} {
          font-size: 10px;
          display: inline-block;
          align-self: stretch;
          height: auto;
          border: none;
          margin-left: 5px;
          padding: 0;
          background-color: transparent;
          @include on-hover-focus(opacity, .25, .5);
        }
        
        &.OR, &.AND, &.NOT {
          &::before {
            margin-right: 5px;
            font-size: 10px;
            line-height: 1rem;
          }
        }
        &.OR { 
          @include entry-color( color('semantic', 'info') );
          &::before { content: 'OR'; }
        }
        &.AND { 
          @include entry-color( color('semantic', 'success') ); 
          &::before { content: 'AND'; }
        }
        &.NOT { 
          @include entry-color( color('semantic', 'danger') ); 
          &::before { content: 'NOT'; }
        }
        
      }
      
    }
    
    .search-input {
      flex-grow: 1;
      
      #{$all-verbage-inputs} { 
        background-color: transparent; 
        height: 100%;
        border: 0;
      }
      #{$all-list-inputs} { min-width: 80px; }
      #{$all-text-inputs} { flex-grow: 1; border: none; }
      
    }
    
    .tooltip {
      @include position(auto 0 100% 0, absolute);
      background-color: color('grey', 'light');
      font-size: .8em;
      height: 40px;
      padding: 10px;
      align-items: center;
      overflow: auto;
      z-index: 2;
    }
    
  }
  
  .field {
    width: 100%;
    margin-top: $padding;

    @include breakpoint( $breakpoint ) {
      width: auto;
      flex-grow: 5; 
    };

  }
    
  .buttons {
    $spacing: 10px;
    $count: 3;

    width: 100%;
    margin-top: $padding;

    @include breakpoint( $breakpoint ) { 
      margin-left: $padding;
      width: auto;
      flex-grow: 2; 
    };

    #{$all-buttons} { 
      width: calc((100% / #{$count}) - ((#{$padding} * (#{$count} - 1)) / #{$count}));
      @include absolute-center-contents;
      float: left;

      .icon { font-size: 1rem; }

      @include breakpoint( $breakpoint ) { align-self: stretch; };

      + #{$all-buttons} { margin-left: $spacing; }

    }

    @include clearfix;

  }
  
}