.search {
  
  $padding: 10px;
  $height: 60px;
  $breakpoint: min-width 765px;
  
  padding: $padding;
  display: grid;
  grid-template-areas: "mode"
                       "box"
                       "dropdown"
                       "buttons";
  grid-template-columns: 100%;
  grid-template-rows: ($controls-height / 2) repeat(3, $controls-height);
  grid-auto-rows: $controls-height;
  grid-gap: $padding;
  background-color: color('white', 'off');
  margin-bottom: 25px;
  
  @include breakpoint( screen('large') ) { 
    grid-template-areas: "mode mode"
                         "box dropdown"
                         "buttons buttons";
    grid-template-rows: ($controls-height / 2) repeat(2, $controls-height);
    grid-template-columns: 1fr auto;
  };
  
  #{$all-verbage-inputs}, 
  .field,
  .buttons,
  #{$all-buttons} { 
    height: $controls-height; 
  }
  
  .search-toggle {
    
    $toggle: ($controls-height / 2);
    
    grid-area: mode;
    font-size: .75em;
    width: 100%;
    height: $toggle;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    flex-wrap: nowrap;

    #{$all-toggle-inputs} { display: none; }
    
    .label { margin-right: 10px; }
    
    .toggle {
      display: inline-block;
      width: 90px;
      height: 100%;
      border: 1px solid color('semantic');
      border-radius: ($toggle / 2);
      transition: all .5s $transition-timing;
    }
    
    .indicator {
      @include size($toggle);
      background-color: color('white');
      border-radius: 50%;
      border: 1px solid color('semantic');
      @include absolute-center-within-container-y;
      transition: all .5s $transition-timing;
    }
    
    .mode {
      $spacing: 10px;
      
      @include absolute-center-within-container;
      width: calc(100% - (#{$spacing} * 2));
      font-size: .75em;
      text-transform: uppercase;
      
      .active, .inactive { @include absolute-center-within-container-y; }
      
      .active { left: 0; }
      .inactive { right: 0; }
      
    }
    
    $tint: 80%;
    $shade: 20%;
    
    .toggle:not(.active) {
      $color: color('semantic', 'success');
      
      background-color: tint($color, $tint);
      box-shadow: inset 0px 0px 5px rgba($color, .15);
      
      .mode { color: shade($color, $shade); }
      .indicator { left: -1px; }
      
    }
    .toggle.active { 
      $color: color('semantic', 'info');
      
      background-color: tint($color, $tint);
      box-shadow: inset 0px 0px 5px rgba($color, .15);
      
      .mode { color: shade($color, $shade); }
      .indicator { left: calc(100% - (#{$toggle} - 1px)); }
      
    }
    
  }
  
  .search-box {
    grid-area: box;
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    background-color: white;
    border: 1px solid color('semantic');
    border-radius: 3px;
    min-height: $height - ($padding * 2);
    
    .search-input {
      flex-grow: 1;

      #{$all-verbage-inputs} { 
        background-color: transparent; 
        height: 100%;
        border: 0;
      }
      #{$all-list-inputs} { min-width: 80px; }
      #{$all-text-inputs} { flex-grow: 1; border: none; }

    }
    
    &.boolean {
      
      .entries {
        list-style-type: none;
        margin: 0;
        padding: 0;
        display: flex;
        flex-wrap: wrap;
        float: left;
        align-self: stretch;
        width: 100%;

        @mixin entry-color( $color ) {
          background-color: tint($color, 90%);
          color: shade($color, 65%);
          border: 1px solid $color;
          &::before { color: $color; }
        }

        li { 
          display: inline-flex; 
          align-items: center; 
          vertical-align: top;
        }

        .entry {
          margin: 5px 5px 0;
          padding: 5px 10px;
          border-radius: 3px;
          height: ($height - ($padding * 2) - (5px * 2));
          @include entry-color( color('semantic', 'primary') );

          #{$all-buttons} {
            font-size: 10px;
            display: inline-block;
            align-self: stretch;
            height: auto;
            border: none;
            margin-left: 5px;
            padding: 0;
            background-color: transparent;
            @include on-hover-focus(opacity, .25, .5);
          }

          &.OR, &.AND, &.NOT {
            &::before {
              margin-right: 5px;
              font-size: 10px;
              line-height: 1rem;
            }
          }
          &.OR { 
            @include entry-color( color('semantic', 'info') );
            &::before { content: 'OR'; }
          }
          &.AND { 
            @include entry-color( color('semantic', 'success') ); 
            &::before { content: 'AND'; }
          }
          &.NOT { 
            @include entry-color( color('semantic', 'danger') ); 
            &::before { content: 'NOT'; }
          }

        }

      }
      
      .btn-clear-input {
        
        $icon: 25px;
        
        @include absolute-center-within-container-y;
        height: $height - ($padding * 4);
        font-size: .75em;
        right: $padding;
        padding: 0 $padding 0 ($padding + $icon);
        @include on-hover-focus(opacity, .5, 1);
        
        .icon { width: $icon; }
        
      }

      .tooltip {
        opacity: .6;
        font-size: .8em;
        height: $height - ($padding * 2); ;
        padding: 10px;
        align-items: center;
      }
      
    }
    
    &.standard {
      
      .search-input { 
        
        #{$all-text-inputs} { width: 100%; }
      
      }
      
    }
    
  }
  
  .field {
    grid-area: dropdown;
    width: 100%;
    
    @include breakpoint( screen('large') ) { min-width: 150px; };
    
    &.disabled {
      
      #{$all-verbage-inputs} { color: color('grey'); }
      
    }

  }
    
  .buttons {
    $spacing: 10px;
    $count: 3;
    $width: 135px;

    grid-area: buttons;
    width: 100%;
    display: flex;
    flex-wrap: nowrap;
    justify-content: flex-start;
    
    #{$all-buttons} { 
      max-width: calc((100% / #{$count}) - ((#{$padding} * (#{$count} - 1)) / #{$count}));
      @include absolute-center-contents;
      white-space: nowrap;

      .icon { font-size: 1rem; }
    
      + #{$all-buttons} { margin-left: $spacing; }

      @include breakpoint( $breakpoint ) { align-self: stretch; };

      @include breakpoint( screen('large') ) { min-width: $width; }

    }

  }
  
}